# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [ push ]

jobs:
  sendMsgForStart:
    runs-on: ubuntu-latest

    steps:
      - name: SendEnglish
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: "One commit has started working and its SHA is `${{github.sha}}`"
      - name: SendChinese
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: "有一个提交开始工作了，它的SHA是 `${{github.sha}}`"
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
            1.8,  # Minimum supported by Minecraft
            11,   # Current Java LTS
            15    # Latest version
        ]
        # and run on both Linux and Windows
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    needs:
      - sendMsgForStart
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: init submodule
        run: git submodule update --init --recursive
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '11' }} # Only upload artifacts built from LTS java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/


# 构建成功后发送消息
  sendMsgForSuccessed:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SendEnglish
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |-
          "SHA of `${{github.sha}}` is built successfully"

      - name: SendChinese
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |-
          "SHA为 `${{github.sha}}` 的构建成功了"